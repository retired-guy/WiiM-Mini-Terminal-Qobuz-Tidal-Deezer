#!/usr/bin/env python3

import upnpclient
import json
import xmltodict
import datetime
import requests
import os, sys
from configparser import ConfigParser
from simple_term_menu import TerminalMenu
from threading import Thread
from time import sleep

def print_there(x, y, text):
    try:
        sys.stdout.write("\x1b7\x1b[%d;%df%s\x1b8" % (x, y, text))
        sys.stdout.flush()
    except:
        pass
    
def get_nowplaying():

    dev = conf["dev"]
    max_lines=conf["lines"] - 15
    max_cols = conf["columns"] - 5
    old_title = ""
    blanks = ' ' * max_cols
    
    while True:
        try:
            ret = dev.AVTransport.GetMediaInfo(InstanceID=0)
            meta = ret["CurrentURIMetaData"]
            track = xmltodict.parse(meta)["DIDL-Lite"]["item"]
            artist = track["upnp:artist"]
            album = track["upnp:album"]
            title = track["dc:title"]
        except:
            sleep(3)
            continue

        s = f'{artist} - {album}: {title}'
        
        if mainMenu == True:    
            print_there(13,1,blanks)
            print_there(13,1,s[0:max_cols])
            
            if title != old_title:
                old_title = title
        else:
            old_title=""
                
        sleep(1)
    
def do_stop():
          
    dev = conf["dev"]
          
    #### Stop the WiiM Mini
    try:
        dev.AVTransport.Stop(InstanceID=0)
    except:
        pass  

def do_prev():
          
    dev = conf["dev"]
          
    #### Previous 
    try:
        dev.AVTransport.Previous(InstanceID=0)
    except:
        pass

def do_next():
          
    dev = conf["dev"]
          
    #### Previous 
    try:
        dev.AVTransport.Next(InstanceID=0)
    except:
        pass
          
          
def do_pause():
          
    dev = conf["dev"]
          
    #### Pause the WiiM Mini
    try:
        dev.AVTransport.Pause(InstanceID=0)
    except:
        pass

def do_play():
          
    dev = conf["dev"]
          
    #### Play the WiiM Mini
    try:      
        dev.AVTransport.Play(InstanceID=0,Speed='1')
    except:
        pass
    
def do_flow():
    
    dev=conf['dev']
    Login_username=conf['Login_username']
    
    list_name="Deezer Flow"
    SearchUrl="https://6049816327.airable.io/id/deezer/program/flow"

    xml = f'<?xml version="1.0"?> <PlayList> <ListName>{list_name}</ListName> <ListInfo> <SourceName>Deezer</SourceName> <SearchUrl>{SearchUrl}</SearchUrl><Login_username>{Login_username}</Login_username> </ListInfo> <Tracks></Tracks> </PlayList>'

    #### Stop the WiiM Mini
    dev.AVTransport.Stop(InstanceID=0)

    #### Populate the WiiM Queue
    dev.PlayQueue.CreateQueue(QueueContext=xml) 

    #### Play
    dev.PlayQueue.PlayQueueWithIndex(QueueName=list_name,Index=0)
    
def do_play_query(query):

    dev=conf['dev']
    Login_username=conf['Login_username']

    try:
        url=f'https://api.deezer.com/search?q={query}'
        ret = requests.get(url).json()
        albums = ret["data"]

        album_id=albums[0]["album"]["id"]
        title=albums[0]["album"]["title"]
        list_name=title.replace('&','&amp;')[0:15]

        xml = f'<?xml version="1.0"?> <PlayList> <ListName>{list_name}</ListName> <ListInfo> <SourceName>Deezer</SourceName> <SearchUrl>https://6049816327.airable.io/id/deezer/album/{album_id}</SearchUrl><Login_username>{Login_username}</Login_username> </ListInfo> <Tracks></Tracks> </PlayList>'
    except:
        return
        
    #### Stop the WiiM Mini
    dev.AVTransport.Stop(InstanceID=0)

    #### Populate the WiiM Queue
    dev.PlayQueue.CreateQueue(QueueContext=xml) 

    #### Play
    dev.PlayQueue.PlayQueueWithIndex(QueueName=list_name,Index=0)

def from_title(s):
    return(s)
 
def do_search(query="",node="album"):
    
    dev=conf['dev']
    app_id=conf['app_id']
    
    url=f'https://api.deezer.com/search/{node}?q={query}&limit=100'         
    try:
        ret = requests.get(url).json()
        items = ret["data"]
    except:
        return ""
    
    options=[]
    idx=1
    for item in items:
        preview=f'Tracks: {item["nb_tracks"]}   {item["title"]}'
        if node == "album":
            preview=f'Tracks: {item["nb_tracks"]}   {item["title"]}'
            option = f'{idx} {item["artist"]["name"]} - {item["title"]}|{preview}'
        else:
            preview=f'Tracks: {item["nb_tracks"]}   {item["user"]["name"]}'
            option = f'{idx} {item["title"]}|{preview}'
                                         
        options.append(option)
        idx = idx+1
        
        
    terminal_menu = TerminalMenu(options,
                                 clear_screen=True,
                                 title="Enter:Play Esc:Exit", 
                                 preview_command=from_title,
                                 preview_size=0.2)
                                 
    menu_entry_index = terminal_menu.show()
                 
    if menu_entry_index == None:
        return
    else:
        list_name=items[menu_entry_index]["title"].replace("&","&amp;")[0:15]
                     
        item_id=items[menu_entry_index]["id"]
        Login_username=conf["Login_username"]
        
        xml = f'<?xml version="1.0"?> <PlayList> <ListName>{list_name}</ListName> <ListInfo> <SourceName>Deezer</SourceName> <SearchUrl>https://6049816327.airable.io/id/deezer/{node}/{item_id}</SearchUrl><Login_username>{Login_username}</Login_username> </ListInfo> <Tracks></Tracks> </PlayList>'

        #### Stop the WiiM Mini
        dev.AVTransport.Stop(InstanceID='0')

        #### Populate the WiiM Queue
        dev.PlayQueue.CreateQueue(QueueContext=xml) 

        #### Play
        dev.PlayQueue.PlayQueueWithIndex(QueueName=list_name,Index=0)

        #print("Playing:",albums[menu_entry_index]["artist"]["name"],"-",albums[menu_entry_index]["title"])

def main():
    global conf
    global mainMenu
    
    home_dir = os.path.expanduser('~')
    config_file = os.path.join(home_dir,'.config/wiim/wiim.ini')
    config = ConfigParser()
    config.read(config_file)

    conf = {}
    conf['app_id']=config['QOBUZ']['app_id']
    conf['description_url'] = config['WIIM']['description_url'] 
    conf['dev'] = upnpclient.Device(conf["description_url"])

    ######### Get user info from WiiM Mini #########################
    res = conf["dev"].PlayQueue.GetUserInfo(AccountSource="Deezer")["Result"]
    info = json.loads(res)
    conf["Login_username"] = info["user_name"]
    ################################################################
                 
    size = os.get_terminal_size()
    conf['columns'] = size.columns
    conf['lines'] = size.lines
                 
    thread = Thread(target=get_nowplaying)
    thread.daemon = True             
    thread.start()

    while True:   
        mainMenu = True  
        options = ["[a] Album Search", 
                   "[l] Playlist Search", 
                   "[f] Flow",
                   "[t] PlayThis", 
                   "[v] Prev", 
                   "[u] Pause", 
                   "[p] Play", 
                   "[n] Next", 
                   "[o] Stop", 
                   "[x] Exit"]
        
        terminal_menu = TerminalMenu(options,clear_screen=True,title="")
                 
        menu_entry_index = terminal_menu.show()
        mainMenu = False         

        if menu_entry_index == 0:
            query = input("Search: ")
            if query != "":
                do_search(query=query,node="album")

        elif menu_entry_index == 1:
            query = input("Search: ")
            if query != "":
                do_search(query=query,node="playlist")
                 
        elif menu_entry_index == 2:
            do_flow()
            
        elif menu_entry_index == 3:
             query = input("Artist Album: ")
             if len(query.split()) > 3:
                do_play_query(query)

        elif menu_entry_index == 4:
            do_prev()
        
        elif menu_entry_index == 5:
            do_pause()
                 
        elif menu_entry_index == 6:
            do_play()
                 
        elif menu_entry_index == 7:
            do_next()
                 
        elif menu_entry_index == 8:
            do_stop()
                 
        else:
            exit(0)

if __name__ == "__main__":
    main()
    
